{"ast":null,"code":"/**\r\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\r\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\r\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = ['\\\\u0000', '\\\\u0001', '\\\\u0002', '\\\\u0003', '\\\\u0004', '\\\\u0005', '\\\\u0006', '\\\\u0007', '\\\\b', '\\\\t', '\\\\n', '\\\\u000B', '\\\\f', '\\\\r', '\\\\u000E', '\\\\u000F', '\\\\u0010', '\\\\u0011', '\\\\u0012', '\\\\u0013', '\\\\u0014', '\\\\u0015', '\\\\u0016', '\\\\u0017', '\\\\u0018', '\\\\u0019', '\\\\u001A', '\\\\u001B', '\\\\u001C', '\\\\u001D', '\\\\u001E', '\\\\u001F', '', '', '\\\\\"', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 2F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 3F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 4F\n'', '', '', '', '', '', '', '', '', '', '', '', '\\\\\\\\', '', '', '',\n// 5F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n// 6F\n'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '\\\\u007F', '\\\\u0080', '\\\\u0081', '\\\\u0082', '\\\\u0083', '\\\\u0084', '\\\\u0085', '\\\\u0086', '\\\\u0087', '\\\\u0088', '\\\\u0089', '\\\\u008A', '\\\\u008B', '\\\\u008C', '\\\\u008D', '\\\\u008E', '\\\\u008F', '\\\\u0090', '\\\\u0091', '\\\\u0092', '\\\\u0093', '\\\\u0094', '\\\\u0095', '\\\\u0096', '\\\\u0097', '\\\\u0098', '\\\\u0099', '\\\\u009A', '\\\\u009B', '\\\\u009C', '\\\\u009D', '\\\\u009E', '\\\\u009F'];","map":{"version":3,"names":["printString","str","replace","escapedRegExp","escapedReplacer","escapeSequences","charCodeAt"],"sources":["C:/bootcamp/PICKFORD---LACE/client/node_modules/graphql/language/printString.mjs"],"sourcesContent":["/**\r\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\r\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\r\n */\r\nexport function printString(str) {\r\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\r\n} // eslint-disable-next-line no-control-regex\r\n\r\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\r\n\r\nfunction escapedReplacer(str) {\r\n  return escapeSequences[str.charCodeAt(0)];\r\n} // prettier-ignore\r\n\r\nconst escapeSequences = [\r\n  '\\\\u0000',\r\n  '\\\\u0001',\r\n  '\\\\u0002',\r\n  '\\\\u0003',\r\n  '\\\\u0004',\r\n  '\\\\u0005',\r\n  '\\\\u0006',\r\n  '\\\\u0007',\r\n  '\\\\b',\r\n  '\\\\t',\r\n  '\\\\n',\r\n  '\\\\u000B',\r\n  '\\\\f',\r\n  '\\\\r',\r\n  '\\\\u000E',\r\n  '\\\\u000F',\r\n  '\\\\u0010',\r\n  '\\\\u0011',\r\n  '\\\\u0012',\r\n  '\\\\u0013',\r\n  '\\\\u0014',\r\n  '\\\\u0015',\r\n  '\\\\u0016',\r\n  '\\\\u0017',\r\n  '\\\\u0018',\r\n  '\\\\u0019',\r\n  '\\\\u001A',\r\n  '\\\\u001B',\r\n  '\\\\u001C',\r\n  '\\\\u001D',\r\n  '\\\\u001E',\r\n  '\\\\u001F',\r\n  '',\r\n  '',\r\n  '\\\\\"',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '', // 2F\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '', // 3F\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '', // 4F\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '\\\\\\\\',\r\n  '',\r\n  '',\r\n  '', // 5F\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '', // 6F\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '',\r\n  '\\\\u007F',\r\n  '\\\\u0080',\r\n  '\\\\u0081',\r\n  '\\\\u0082',\r\n  '\\\\u0083',\r\n  '\\\\u0084',\r\n  '\\\\u0085',\r\n  '\\\\u0086',\r\n  '\\\\u0087',\r\n  '\\\\u0088',\r\n  '\\\\u0089',\r\n  '\\\\u008A',\r\n  '\\\\u008B',\r\n  '\\\\u008C',\r\n  '\\\\u008D',\r\n  '\\\\u008E',\r\n  '\\\\u008F',\r\n  '\\\\u0090',\r\n  '\\\\u0091',\r\n  '\\\\u0092',\r\n  '\\\\u0093',\r\n  '\\\\u0094',\r\n  '\\\\u0095',\r\n  '\\\\u0096',\r\n  '\\\\u0097',\r\n  '\\\\u0098',\r\n  '\\\\u0099',\r\n  '\\\\u009A',\r\n  '\\\\u009B',\r\n  '\\\\u009C',\r\n  '\\\\u009D',\r\n  '\\\\u009E',\r\n  '\\\\u009F',\r\n];\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAWA,CAACC,GAAG,EAAE;EAC/B,OAAO,IAAIA,GAAG,CAACC,OAAO,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAG;AAC3D,CAAC,CAAC;;AAEF,MAAMD,aAAa,GAAG,+BAA+B;AAErD,SAASC,eAAeA,CAACH,GAAG,EAAE;EAC5B,OAAOI,eAAe,CAACJ,GAAG,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC;;AAEF,MAAMD,eAAe,GAAG,CACtB,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,KAAK,EACL,KAAK,EACL,KAAK,EACL,SAAS,EACT,KAAK,EACL,KAAK,EACL,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,EAAE,EACF,EAAE,EACF,KAAK,EACL,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE;AAAE;AACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE;AAAE;AACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE;AAAE;AACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,MAAM,EACN,EAAE,EACF,EAAE,EACF,EAAE;AAAE;AACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE;AAAE;AACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}