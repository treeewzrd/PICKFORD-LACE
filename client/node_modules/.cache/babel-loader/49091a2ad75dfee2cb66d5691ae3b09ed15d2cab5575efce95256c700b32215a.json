{"ast":null,"code":"import { toError } from '../jsutils/toError.mjs';\nimport { GraphQLError } from './GraphQLError.mjs';\n/**\r\n * Given an arbitrary value, presumably thrown while attempting to execute a\r\n * GraphQL operation, produce a new GraphQLError aware of the location in the\r\n * document responsible for the original Error.\r\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n  const originalError = toError(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n  return new GraphQLError(originalError.message, {\n    nodes: (_nodes = originalError.nodes) !== null && _nodes !== void 0 ? _nodes : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError\n  });\n}\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}","map":{"version":3,"names":["toError","GraphQLError","locatedError","rawOriginalError","nodes","path","_nodes","originalError","isLocatedGraphQLError","message","source","positions","error","Array","isArray"],"sources":["C:/bootcamp/PICKFORD---LACE/client/node_modules/graphql/error/locatedError.mjs"],"sourcesContent":["import { toError } from '../jsutils/toError.mjs';\r\nimport { GraphQLError } from './GraphQLError.mjs';\r\n/**\r\n * Given an arbitrary value, presumably thrown while attempting to execute a\r\n * GraphQL operation, produce a new GraphQLError aware of the location in the\r\n * document responsible for the original Error.\r\n */\r\n\r\nexport function locatedError(rawOriginalError, nodes, path) {\r\n  var _nodes;\r\n\r\n  const originalError = toError(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\r\n\r\n  if (isLocatedGraphQLError(originalError)) {\r\n    return originalError;\r\n  }\r\n\r\n  return new GraphQLError(originalError.message, {\r\n    nodes:\r\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\r\n        ? _nodes\r\n        : nodes,\r\n    source: originalError.source,\r\n    positions: originalError.positions,\r\n    path,\r\n    originalError,\r\n  });\r\n}\r\n\r\nfunction isLocatedGraphQLError(error) {\r\n  return Array.isArray(error.path);\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,wBAAwB;AAChD,SAASC,YAAY,QAAQ,oBAAoB;AACjD;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAYA,CAACC,gBAAgB,EAAEC,KAAK,EAAEC,IAAI,EAAE;EAC1D,IAAIC,MAAM;EAEV,MAAMC,aAAa,GAAGP,OAAO,CAACG,gBAAgB,CAAC,CAAC,CAAC;;EAEjD,IAAIK,qBAAqB,CAACD,aAAa,CAAC,EAAE;IACxC,OAAOA,aAAa;EACtB;EAEA,OAAO,IAAIN,YAAY,CAACM,aAAa,CAACE,OAAO,EAAE;IAC7CL,KAAK,EACH,CAACE,MAAM,GAAGC,aAAa,CAACH,KAAK,MAAM,IAAI,IAAIE,MAAM,KAAK,KAAK,CAAC,GACxDA,MAAM,GACNF,KAAK;IACXM,MAAM,EAAEH,aAAa,CAACG,MAAM;IAC5BC,SAAS,EAAEJ,aAAa,CAACI,SAAS;IAClCN,IAAI;IACJE;EACF,CAAC,CAAC;AACJ;AAEA,SAASC,qBAAqBA,CAACI,KAAK,EAAE;EACpC,OAAOC,KAAK,CAACC,OAAO,CAACF,KAAK,CAACP,IAAI,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}