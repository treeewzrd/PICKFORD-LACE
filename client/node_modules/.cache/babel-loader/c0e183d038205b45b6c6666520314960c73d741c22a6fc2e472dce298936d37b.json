{"ast":null,"code":"var _jsxFileName = \"C:\\\\bootcamp\\\\PICKFORD---LACE\\\\client\\\\src\\\\utils\\\\GlobalState.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\n\n// Define initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  cart: [],\n  cartOpen: false\n  // other state properties...\n};\n\n// Create context\nconst GlobalContext = /*#__PURE__*/createContext();\nconst GlobalDispatchContext = /*#__PURE__*/createContext();\n\n// Reducer function\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      console.log(\"Cart state before add:\", state.cart);\n      console.log(\"Adding item:\", action.payload);\n\n      // Check if item is already in cart (using either id or _id)\n      const existingItem = state.cart.find(item => item._id === action.payload._id || item.id === action.payload.id);\n      if (existingItem) {\n        // Update quantity if item exists\n        const updatedCart = state.cart.map(item => item._id === action.payload._id || item.id === action.payload.id ? {\n          ...item,\n          quantity: item.quantity + 1,\n          purchaseQuantity: item.purchaseQuantity + 1\n        } : item);\n        console.log(\"Updated cart (existing item):\", updatedCart);\n        return {\n          ...state,\n          cartOpen: true,\n          cart: updatedCart\n        };\n      }\n\n      // Add new item to cart\n      const newCart = [...state.cart, action.payload];\n      console.log(\"Updated cart (new item):\", newCart);\n      return {\n        ...state,\n        cartOpen: true,\n        cart: newCart\n      };\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cart: state.cart.filter(item => item._id !== action.payload && item.id !== action.payload)\n      };\n    case 'UPDATE_CART_QUANTITY':\n      return {\n        ...state,\n        cart: state.cart.map(item => item._id === action.payload._id || item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity,\n          purchaseQuantity: action.payload.quantity\n        } : item)\n      };\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        cart: []\n      };\n    case 'TOGGLE_CART':\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    // Add other cases as needed\n\n    default:\n      return state;\n  }\n};\n\n// Provider component\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(GlobalDispatchContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hooks to use the context\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = GlobalProvider;\nexport const useGlobalState = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useGlobalDispatch = () => {\n  _s3();\n  return useContext(GlobalDispatchContext);\n};\n_s3(useGlobalDispatch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","cart","cartOpen","GlobalContext","GlobalDispatchContext","reducer","state","action","type","console","log","payload","existingItem","find","item","_id","id","updatedCart","map","quantity","purchaseQuantity","newCart","filter","GlobalProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalState","_s2","useGlobalDispatch","_s3","$RefreshReg$"],"sources":["C:/bootcamp/PICKFORD---LACE/client/src/utils/GlobalState.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n\r\n// Define initial state\r\nconst initialState = {\r\n  cart: [],\r\n  cartOpen: false,\r\n  // other state properties...\r\n};\r\n\r\n// Create context\r\nconst GlobalContext = createContext();\r\nconst GlobalDispatchContext = createContext();\r\n\r\n// Reducer function\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      console.log(\"Cart state before add:\", state.cart);\r\n      console.log(\"Adding item:\", action.payload);\r\n      \r\n      // Check if item is already in cart (using either id or _id)\r\n      const existingItem = state.cart.find(\r\n        item => (item._id === action.payload._id) || \r\n               (item.id === action.payload.id)\r\n      );\r\n      \r\n      if (existingItem) {\r\n        // Update quantity if item exists\r\n        const updatedCart = state.cart.map(item => \r\n          (item._id === action.payload._id) || (item.id === action.payload.id)\r\n            ? { ...item, quantity: item.quantity + 1, purchaseQuantity: item.purchaseQuantity + 1 }\r\n            : item\r\n        );\r\n        console.log(\"Updated cart (existing item):\", updatedCart);\r\n        \r\n        return {\r\n          ...state,\r\n          cartOpen: true,\r\n          cart: updatedCart\r\n        };\r\n      }\r\n      \r\n      // Add new item to cart\r\n      const newCart = [...state.cart, action.payload];\r\n      console.log(\"Updated cart (new item):\", newCart);\r\n      \r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: newCart\r\n      };\r\n      \r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(item => \r\n          (item._id !== action.payload) && (item.id !== action.payload)\r\n        )\r\n      };\r\n      \r\n    case 'UPDATE_CART_QUANTITY':\r\n      return {\r\n        ...state,\r\n        cart: state.cart.map(item => \r\n          (item._id === action.payload._id) || (item.id === action.payload.id)\r\n            ? { \r\n                ...item, \r\n                quantity: action.payload.quantity,\r\n                purchaseQuantity: action.payload.quantity \r\n              }\r\n            : item\r\n        )\r\n      };\r\n      \r\n    case 'CLEAR_CART':\r\n      return {\r\n        ...state,\r\n        cart: []\r\n      };\r\n      \r\n    case 'TOGGLE_CART':\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n      \r\n    // Add other cases as needed\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  \r\n  return (\r\n    <GlobalContext.Provider value={state}>\r\n      <GlobalDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </GlobalDispatchContext.Provider>\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hooks to use the context\r\nexport const useGlobalState = () => useContext(GlobalContext);\r\nexport const useGlobalDispatch = () => useContext(GlobalDispatchContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}