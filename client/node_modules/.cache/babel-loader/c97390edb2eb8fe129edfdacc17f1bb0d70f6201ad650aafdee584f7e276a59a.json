{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bootcamp\\\\mern-graphql-ecommerce\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n// Add this import at the top of your index.js\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Create an HTTP link to your GraphQL API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: '/graphql' // Adjust this to your GraphQL endpoint\n});\n\n// Add authentication to your requests if needed\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Bootcamp/mern-graphql-ecommerce/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n// Add this import at the top of your index.js\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Create an HTTP link to your GraphQL API\nconst httpLink = createHttpLink({\n  uri: '/graphql', // Adjust this to your GraphQL endpoint\n});\n\n// Add authentication to your requests if needed\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ApolloProvider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC5F,SAASC,UAAU,QAAQ,6BAA6B;AACxD;AACA,OAAO,sCAAsC;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;EAC9BK,GAAG,EAAE,UAAU,CAAE;AACnB,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAGL,UAAU,CAAC,CAACM,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,OAAO;IACLH,OAAO,EAAE;MACP,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAIhB,YAAY,CAAC;EAC9BiB,IAAI,EAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC;EAC/BY,KAAK,EAAE,IAAIlB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAMmB,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTlB,OAAA,CAACX,KAAK,CAAC8B,UAAU;EAAAC,QAAA,eACfpB,OAAA,CAACJ,cAAc;IAACc,MAAM,EAAEA,MAAO;IAAAU,QAAA,eAC7BpB,OAAA,CAACP,aAAa;MAAA2B,QAAA,eACZpB,OAAA,CAACT,GAAG;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACpB,CAAC;AAEDhC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}