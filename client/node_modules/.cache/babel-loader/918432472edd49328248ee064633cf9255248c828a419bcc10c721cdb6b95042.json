{"ast":null,"code":"import { inspect } from './inspect.mjs';\n/**\r\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\r\n */\n\nexport function toError(thrownValue) {\n  return thrownValue instanceof Error ? thrownValue : new NonErrorThrown(thrownValue);\n}\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + inspect(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}","map":{"version":3,"names":["inspect","toError","thrownValue","Error","NonErrorThrown","constructor","name"],"sources":["C:/bootcamp/PICKFORD---LACE/client/node_modules/graphql/jsutils/toError.mjs"],"sourcesContent":["import { inspect } from './inspect.mjs';\r\n/**\r\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\r\n */\r\n\r\nexport function toError(thrownValue) {\r\n  return thrownValue instanceof Error\r\n    ? thrownValue\r\n    : new NonErrorThrown(thrownValue);\r\n}\r\n\r\nclass NonErrorThrown extends Error {\r\n  constructor(thrownValue) {\r\n    super('Unexpected error value: ' + inspect(thrownValue));\r\n    this.name = 'NonErrorThrown';\r\n    this.thrownValue = thrownValue;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,eAAe;AACvC;AACA;AACA;;AAEA,OAAO,SAASC,OAAOA,CAACC,WAAW,EAAE;EACnC,OAAOA,WAAW,YAAYC,KAAK,GAC/BD,WAAW,GACX,IAAIE,cAAc,CAACF,WAAW,CAAC;AACrC;AAEA,MAAME,cAAc,SAASD,KAAK,CAAC;EACjCE,WAAWA,CAACH,WAAW,EAAE;IACvB,KAAK,CAAC,0BAA0B,GAAGF,OAAO,CAACE,WAAW,CAAC,CAAC;IACxD,IAAI,CAACI,IAAI,GAAG,gBAAgB;IAC5B,IAAI,CAACJ,WAAW,GAAGA,WAAW;EAChC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}