{"ast":null,"code":"import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\r\n * Produces a JavaScript value given a GraphQL Value AST.\r\n *\r\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\r\n * will reflect the provided GraphQL value AST.\r\n *\r\n * | GraphQL Value        | JavaScript Value |\r\n * | -------------------- | ---------------- |\r\n * | Input Object         | Object           |\r\n * | List                 | Array            |\r\n * | Boolean              | Boolean          |\r\n * | String / Enum        | String           |\r\n * | Int / Float          | Number           |\r\n * | Null                 | null             |\r\n *\r\n */\n\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n    case Kind.LIST:\n      return valueNode.values.map(node => valueFromASTUntyped(node, variables));\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, field => field.name.value, field => valueFromASTUntyped(field.value, variables));\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  }\n}","map":{"version":3,"names":["keyValMap","Kind","valueFromASTUntyped","valueNode","variables","kind","NULL","INT","parseInt","value","FLOAT","parseFloat","STRING","ENUM","BOOLEAN","LIST","values","map","node","OBJECT","fields","field","name","VARIABLE"],"sources":["C:/bootcamp/PICKFORD---LACE/client/node_modules/graphql/utilities/valueFromASTUntyped.mjs"],"sourcesContent":["import { keyValMap } from '../jsutils/keyValMap.mjs';\r\nimport { Kind } from '../language/kinds.mjs';\r\n/**\r\n * Produces a JavaScript value given a GraphQL Value AST.\r\n *\r\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\r\n * will reflect the provided GraphQL value AST.\r\n *\r\n * | GraphQL Value        | JavaScript Value |\r\n * | -------------------- | ---------------- |\r\n * | Input Object         | Object           |\r\n * | List                 | Array            |\r\n * | Boolean              | Boolean          |\r\n * | String / Enum        | String           |\r\n * | Int / Float          | Number           |\r\n * | Null                 | null             |\r\n *\r\n */\r\n\r\nexport function valueFromASTUntyped(valueNode, variables) {\r\n  switch (valueNode.kind) {\r\n    case Kind.NULL:\r\n      return null;\r\n\r\n    case Kind.INT:\r\n      return parseInt(valueNode.value, 10);\r\n\r\n    case Kind.FLOAT:\r\n      return parseFloat(valueNode.value);\r\n\r\n    case Kind.STRING:\r\n    case Kind.ENUM:\r\n    case Kind.BOOLEAN:\r\n      return valueNode.value;\r\n\r\n    case Kind.LIST:\r\n      return valueNode.values.map((node) =>\r\n        valueFromASTUntyped(node, variables),\r\n      );\r\n\r\n    case Kind.OBJECT:\r\n      return keyValMap(\r\n        valueNode.fields,\r\n        (field) => field.name.value,\r\n        (field) => valueFromASTUntyped(field.value, variables),\r\n      );\r\n\r\n    case Kind.VARIABLE:\r\n      return variables === null || variables === void 0\r\n        ? void 0\r\n        : variables[valueNode.name.value];\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,SAASC,IAAI,QAAQ,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,mBAAmBA,CAACC,SAAS,EAAEC,SAAS,EAAE;EACxD,QAAQD,SAAS,CAACE,IAAI;IACpB,KAAKJ,IAAI,CAACK,IAAI;MACZ,OAAO,IAAI;IAEb,KAAKL,IAAI,CAACM,GAAG;MACX,OAAOC,QAAQ,CAACL,SAAS,CAACM,KAAK,EAAE,EAAE,CAAC;IAEtC,KAAKR,IAAI,CAACS,KAAK;MACb,OAAOC,UAAU,CAACR,SAAS,CAACM,KAAK,CAAC;IAEpC,KAAKR,IAAI,CAACW,MAAM;IAChB,KAAKX,IAAI,CAACY,IAAI;IACd,KAAKZ,IAAI,CAACa,OAAO;MACf,OAAOX,SAAS,CAACM,KAAK;IAExB,KAAKR,IAAI,CAACc,IAAI;MACZ,OAAOZ,SAAS,CAACa,MAAM,CAACC,GAAG,CAAEC,IAAI,IAC/BhB,mBAAmB,CAACgB,IAAI,EAAEd,SAAS,CACrC,CAAC;IAEH,KAAKH,IAAI,CAACkB,MAAM;MACd,OAAOnB,SAAS,CACdG,SAAS,CAACiB,MAAM,EACfC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACb,KAAK,EAC1BY,KAAK,IAAKnB,mBAAmB,CAACmB,KAAK,CAACZ,KAAK,EAAEL,SAAS,CACvD,CAAC;IAEH,KAAKH,IAAI,CAACsB,QAAQ;MAChB,OAAOnB,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAC7C,KAAK,CAAC,GACNA,SAAS,CAACD,SAAS,CAACmB,IAAI,CAACb,KAAK,CAAC;EACvC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}